# -*- coding: utf-8 -*-
"""pandas_anki.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BS-wpPlX_TKgjJSdCBLVA6grF1K13kLU
"""

pip install genanki

import genanki
import random

# Definir el modelo para las tarjetas
modelo_pandas = genanki.Model(
  2001509177,  # ID único del modelo
  'Pandas Code Model',
  fields=[
    {'name': 'Pregunta'},
    {'name': 'Respuesta'},
    {'name': 'Código'}
  ],
  templates=[
    {
      'name': 'Tarjeta Principal',
      'qfmt': '{{Pregunta}}',
      'afmt': '{{Respuesta}}<br><br><pre><code>{{Código}}</code></pre>',
    },
  ])

# Definir el mazo
mazo_pandas = genanki.Deck(
  2001509178,  # ID único del mazo
  'Pandas: 100 Tarjetas de Código y Conceptos')

# Lista de 100 tarjetas completas
tarjetas = [
    {
        'pregunta': '¿Cómo se importa la librería pandas y cuál es su alias común?',
        'respuesta': 'Se usa `import pandas as pd`. El alias `pd` es una convención estándar.',
        'codigo': 'import pandas as pd'
    },
    {
        'pregunta': '¿Qué es una `Series` en pandas?',
        'respuesta': 'Una `Series` es un array unidimensional que puede contener cualquier tipo de dato y tiene una etiqueta para cada elemento (un índice).',
        'codigo': 's = pd.Series([1, 2, 3, 4, 5])'
    },
    {
        'pregunta': '¿Qué es un `DataFrame` en pandas?',
        'respuesta': 'Un `DataFrame` es una estructura de datos bidimensional con columnas que pueden tener diferentes tipos de datos, similar a una tabla de una hoja de cálculo.',
        'codigo': 'data = {\'col1\': [1, 2], \'col2\': [3, 4]}\ndf = pd.DataFrame(data)'
    },
    {
        'pregunta': '¿Cómo se crea un `DataFrame` a partir de un diccionario?',
        'respuesta': 'Cada clave del diccionario se convierte en una columna, y los valores se convierten en las filas.',
        'codigo': 'data = {\'Nombre\': [\'Ana\', \'Luis\'], \'Edad\': [25, 30]}\ndf = pd.DataFrame(data)'
    },
    {
        'pregunta': '¿Cómo se lee un archivo CSV en un DataFrame?',
        'respuesta': 'Se usa la función `read_csv()`.',
        'codigo': 'df = pd.read_csv(\'datos.csv\')'
    },
    {
        'pregunta': '¿Cómo se guarda un DataFrame en un archivo CSV?',
        'respuesta': 'Se usa el método `.to_csv()`.',
        'codigo': 'df.to_csv(\'salida.csv\', index=False)'
    },
    {
        'pregunta': '¿Cómo se lee un archivo de Excel?',
        'respuesta': 'Se usa la función `read_excel()`.',
        'codigo': 'df = pd.read_excel(\'datos.xlsx\')'
    },
    {
        'pregunta': '¿Cómo se guarda un DataFrame en un archivo de Excel?',
        'respuesta': 'Se usa el método `.to_excel()`.',
        'codigo': 'df.to_excel(\'salida.xlsx\', index=False)'
    },
    {
        'pregunta': '¿Cómo se muestran las primeras 5 filas de un DataFrame?',
        'respuesta': 'Se usa el método `.head()`.',
        'codigo': 'df.head()'
    },
    {
        'pregunta': '¿Cómo se muestran las últimas 5 filas de un DataFrame?',
        'respuesta': 'Se usa el método `.tail()`.',
        'codigo': 'df.tail()'
    },
    {
        'pregunta': '¿Cómo se obtiene un resumen de la información de un DataFrame, incluyendo los tipos de datos y los valores no nulos?',
        'respuesta': 'Se usa el método `.info()`.',
        'codigo': 'df.info()'
    },
    {
        'pregunta': '¿Cómo se obtiene un resumen estadístico de las columnas numéricas?',
        'respuesta': 'Se usa el método `.describe()`.',
        'codigo': 'df.describe()'
    },
    {
        'pregunta': '¿Cómo se obtienen los tipos de datos de cada columna?',
        'respuesta': 'Se usa el atributo `.dtypes`.',
        'codigo': 'df.dtypes'
    },
    {
        'pregunta': '¿Cómo se selecciona una sola columna?',
        'respuesta': 'Se usa la notación de corchetes con el nombre de la columna entre comillas.',
        'codigo': 'df[\'nombre_columna\']'
    },
    {
        'pregunta': '¿Cómo se seleccionan múltiples columnas?',
        'respuesta': 'Se usa una lista de nombres de columnas dentro de los corchetes.',
        'codigo': 'df[[\'columna_1\', \'columna_2\']]'
    },
    {
        'pregunta': '¿Cuál es la diferencia entre `.loc[]` e `.iloc[]`?',
        'respuesta': '`.loc[]` se usa para seleccionar datos por etiquetas (nombres de filas y columnas), mientras que `.iloc[]` se usa por posición entera (número de índice).',
        'codigo': 'df.loc[0, \'columna\'] # Por etiqueta\ndf.iloc[0, 0] # Por posición'
    },
    {
        'pregunta': '¿Cómo se filtran filas basándose en una condición?',
        'respuesta': 'Se usa un filtro booleano dentro de los corchetes del DataFrame.',
        'codigo': 'df[df[\'Edad\'] > 30]'
    },
    {
        'pregunta': '¿Cómo se combinan múltiples condiciones para filtrar?',
        'respuesta': 'Se usan los operadores lógicos `&` (and), `|` (or) y `~` (not) entre paréntesis.',
        'codigo': 'df[(df[\'Edad\'] > 30) & (df[\'Ciudad\'] == \'Madrid\')]'
    },
    {
        'pregunta': '¿Cómo se identifican los valores nulos (NaN)?',
        'respuesta': 'Se usa el método `.isna()` o `.isnull()`.',
        'codigo': 'df.isna()'
    },
    {
        'pregunta': '¿Cómo se cuentan los valores nulos por columna?',
        'respuesta': 'Se encadenan `.isna()` con `.sum()`.',
        'codigo': 'df.isna().sum()'
    },
    {
        'pregunta': '¿Cómo se eliminan filas que contienen valores nulos?',
        'respuesta': 'Se usa el método `.dropna()`.',
        'codigo': 'df.dropna()'
    },
    {
        'pregunta': '¿Cómo se eliminan columnas que contienen valores nulos?',
        'respuesta': 'Se usa `.dropna(axis=1)`.',
        'codigo': 'df.dropna(axis=1)'
    },
    {
        'pregunta': '¿Cómo se reemplazan todos los valores nulos por un valor específico?',
        'respuesta': 'Se usa el método `.fillna()`.',
        'codigo': 'df.fillna(0)'
    },
    {
        'pregunta': '¿Cómo se reemplazan los valores nulos de una columna numérica por la media de esa columna?',
        'respuesta': 'Se usa `.fillna()` con el resultado de `.mean()`.',
        'codigo': 'df[\'col\'].fillna(df[\'col\'].mean())'
    },
    {
        'pregunta': '¿Cómo se reemplazan los valores nulos de una columna categórica por la moda?',
        'respuesta': 'Se usa `.fillna()` con el resultado de `.mode()[0]`.',
        'codigo': 'df[\'col\'].fillna(df[\'col\'].mode()[0])'
    },
    {
        'pregunta': '¿Cómo se cambian los tipos de datos de una columna?',
        'respuesta': 'Se usa el método `.astype()`.',
        'codigo': 'df[\'col\'] = df[\'col\'].astype(\'float\')'
    },
    {
        'pregunta': '¿Cómo se renombra una columna?',
        'respuesta': 'Se usa el método `.rename()` con un diccionario que mapea nombres viejos a nombres nuevos.',
        'codigo': 'df.rename(columns={\'col_vieja\': \'col_nueva\'})'
    },
    {
        'pregunta': '¿Cómo se ordenan los valores de un DataFrame por una columna?',
        'respuesta': 'Se usa el método `.sort_values()`.',
        'codigo': 'df.sort_values(by=\'columna\', ascending=False)'
    },
    {
        'pregunta': '¿Cómo se agrupan datos y se calcula la media de un grupo?',
        'respuesta': 'Se usa el método `.groupby()` seguido de una operación de agregación como `.mean()`.',
        'codigo': 'df.groupby(\'categoria\')[\'valor\'].mean()'
    },
    {
        'pregunta': '¿Cómo se aplica una función a una columna?',
        'respuesta': 'Se usa el método `.apply()`.',
        'codigo': 'df[\'col\'].apply(lambda x: x * 2)'
    },
    {
        'pregunta': '¿Cómo se eliminan filas duplicadas?',
        'respuesta': 'Se usa el método `.drop_duplicates()`.',
        'codigo': 'df.drop_duplicates()'
    },
    {
        'pregunta': '¿Cómo se combinan dos DataFrames por una columna en común?',
        'respuesta': 'Se usa la función `pd.merge()`.',
        'codigo': 'df_final = pd.merge(df1, df2, on=\'clave_comun\')'
    },
    {
        'pregunta': '¿Cómo se unen dos DataFrames apilándolos (concatenándolos) uno encima del otro?',
        'respuesta': 'Se usa la función `pd.concat()`.',
        'codigo': 'df_total = pd.concat([df1, df2])'
    },
    {
        'pregunta': '¿Cómo se convierte una columna a tipo datetime?',
        'respuesta': 'Se usa `pd.to_datetime()`.',
        'codigo': 'df[\'fecha\'] = pd.to_datetime(df[\'fecha\'])'
    },
    {
        'pregunta': '¿Cómo se extrae el año de una columna de tipo datetime?',
        'respuesta': 'Se usa el atributo `.dt.year`.',
        'codigo': 'df[\'fecha\'].dt.year'
    },
    {
        'pregunta': '¿Cómo se usa un `pivot_table` para resumir datos?',
        'respuesta': 'Se usa `df.pivot_table()`, especificando los `valores`, el `índice` y las `columnas`.',
        'codigo': 'tabla = df.pivot_table(values=\'ventas\', index=\'region\', columns=\'mes\', aggfunc=\'sum\')'
    },
    {
        'pregunta': '¿Cómo se crea una nueva columna a partir de operaciones con otras columnas?',
        'respuesta': 'Se asigna el resultado de la operación a un nuevo nombre de columna.',
        'codigo': 'df[\'nueva_columna\'] = df[\'col1\'] + df[\'col2\']'
    },
    {
        'pregunta': '¿Cómo se aplican operaciones a cadenas de texto en una columna?',
        'respuesta': 'Se usa el accesor `.str`.',
        'codigo': 'df[\'nombre\'].str.lower()'
    },
    {
        'pregunta': '¿Cómo se obtiene la correlación entre columnas numéricas?',
        'respuesta': 'Se usa el método `.corr()`.',
        'codigo': 'df.corr()'
    },
    {
        'pregunta': '¿Cómo se usa `iloc` para seleccionar la primera fila?',
        'respuesta': 'Se usa `df.iloc[0]`.',
        'codigo': 'df.iloc[0]'
    },
    {
        'pregunta': '¿Cómo se usa `iloc` para seleccionar las últimas 3 filas?',
        'respuesta': 'Se usa un índice negativo o una porción (slice) negativa.',
        'codigo': 'df.iloc[-3:]'
    },
    {
        'pregunta': '¿Cómo se usa `loc` para seleccionar una fila por su índice?',
        'respuesta': 'Se usa `df.loc[indice]`.',
        'codigo': 'df.loc[\'fila_1\']'
    },
    {
        'pregunta': '¿Cómo se cambian los nombres de todas las columnas a minúsculas?',
        'respuesta': 'Se usa `.columns.str.lower()`.',
        'codigo': 'df.columns = df.columns.str.lower()'
    },
    {
        'pregunta': '¿Cómo se usa `apply` para aplicar una función a cada fila?',
        'respuesta': 'Se usa `axis=1`.',
        'codigo': 'df.apply(lambda row: row[\'col1\'] + row[\'col2\'], axis=1)'
    },
    {
        'pregunta': '¿Cómo se cuenta la frecuencia de cada valor único en una columna?',
        'respuesta': 'Se usa el método `.value_counts()`.',
        'codigo': 'df[\'columna\'].value_counts()'
    },
    {
        'pregunta': '¿Cómo se usa `pd.cut()` para crear grupos de datos?',
        'respuesta': 'Se usa `pd.cut()` para segmentar y agrupar datos en intervalos.',
        'codigo': 'df[\'Edad_Grupo\'] = pd.cut(df[\'Edad\'], bins=[0, 18, 65, 100], labels=[\'Joven\', \'Adulto\', \'Mayor\'])'
    },
    {
        'pregunta': '¿Cómo se convierte una columna a un tipo de categoría para ahorrar memoria?',
        'respuesta': 'Se usa `.astype(\'category\')`.',
        'codigo': 'df[\'col\'] = df[\'col\'].astype(\'category\')'
    },
    {
        'pregunta': '¿Cómo se eliminan filas que tienen valores duplicados en una o más columnas?',
        'respuesta': 'Se usa `df.drop_duplicates()` y se especifica la columna en el argumento `subset`.',
        'codigo': 'df.drop_duplicates(subset=[\'col1\', \'col2\'])'
    },
    {
        'pregunta': '¿Cómo se encuentra el valor máximo de una columna?',
        'respuesta': 'Se usa el método `.max()`.',
        'codigo': 'df[\'col\'].max()'
    },
    {
        'pregunta': '¿Cómo se encuentra el valor mínimo de una columna?',
        'respuesta': 'Se usa el método `.min()`.',
        'codigo': 'df[\'col\'].min()'
    },
    {
        'pregunta': '¿Cómo se calcula la suma de una columna?',
        'respuesta': 'Se usa el método `.sum()`.',
        'codigo': 'df[\'col\'].sum()'
    },
    {
        'pregunta': '¿Cómo se calcula el promedio de una columna?',
        'respuesta': 'Se usa el método `.mean()`.',
        'codigo': 'df[\'col\'].mean()'
    },
    {
        'pregunta': '¿Cómo se calcula la mediana de una columna?',
        'respuesta': 'Se usa el método `.median()`.',
        'codigo': 'df[\'col\'].median()'
    },
    {
        'pregunta': '¿Cómo se crea un nuevo índice para el DataFrame?',
        'respuesta': 'Se usa el método `.set_index()`.',
        'codigo': 'df.set_index(\'columna\', inplace=True)'
    },
    {
        'pregunta': '¿Cómo se reinicia el índice del DataFrame a la numeración por defecto?',
        'respuesta': 'Se usa el método `.reset_index()`.',
        'codigo': 'df.reset_index(inplace=True)'
    },
    {
        'pregunta': '¿Cómo se reemplazan valores específicos en un DataFrame?',
        'respuesta': 'Se usa el método `.replace()`.',
        'codigo': 'df.replace(to_replace=\'viejo\', value=\'nuevo\')'
    },
    {
        'pregunta': '¿Cómo se usa `.groupby()` con `.agg()` para realizar múltiples agregaciones?',
        'respuesta': 'Se pasa un diccionario a `.agg()`. Las claves son las columnas a agregar y los valores son las funciones a usar.',
        'codigo': 'df.groupby(\'categoria\').agg({\'valor\': [\'mean\', \'min\', \'max\']})'
    },
    {
        'pregunta': '¿Cómo se obtienen los valores únicos de una columna?',
        'respuesta': 'Se usa el método `.unique()`.',
        'codigo': 'df[\'col\'].unique()'
    },
    {
        'pregunta': '¿Cómo se verifica si un DataFrame está vacío?',
        'respuesta': 'Se usa el atributo `.empty`.',
        'codigo': 'df.empty'
    },
    {
        'pregunta': '¿Cómo se elimina una columna?',
        'respuesta': 'Se usa el método `.drop()` con `axis=1`.',
        'codigo': 'df.drop(columns=\'columna_a_borrar\')'
    },
    {
        'pregunta': '¿Cómo se elimina una fila por su índice?',
        'respuesta': 'Se usa el método `.drop()` con `axis=0`.',
        'codigo': 'df.drop(index=0)'
    },
    {
        'pregunta': '¿Cómo se crea un DataFrame con datos de un rango de fechas?',
        'respuesta': 'Se usa `pd.date_range()` para generar las fechas y luego se pasa al DataFrame.',
        'codigo': 'fechas = pd.date_range(start=\'2023-01-01\', periods=5)\ndf = pd.DataFrame({\'fecha\': fechas})'
    },
    {
        'pregunta': '¿Cómo se extrae el día de la semana de una columna de tipo datetime?',
        'respuesta': 'Se usa el atributo `.dt.day_name()`.',
        'codigo': 'df[\'fecha\'].dt.day_name()'
    },
    {
        'pregunta': '¿Cómo se usa `iloc` para seleccionar un rango de filas?',
        'respuesta': 'Se usa la notación de porción (slice).',
        'codigo': 'df.iloc[1:4] # Filas de 1 a 3'
    },
    {
        'pregunta': '¿Cómo se usa `loc` para seleccionar un rango de filas por índice?',
        'respuesta': 'Se usa la notación de porción (slice) con los nombres de los índices de inicio y fin.',
        'codigo': 'df.loc[\'2023-01-02\':\'2023-01-04\']'
    },
    {
        'pregunta': '¿Cómo se crean columnas ficticias (dummy variables) a partir de una columna categórica?',
        'respuesta': 'Se usa la función `pd.get_dummies()`.',
        'codigo': 'pd.get_dummies(df[\'categoria\'])'
    },
    {
        'pregunta': '¿Cómo se convierte una columna de strings con comas en números?',
        'respuesta': 'Se usa el accesor `.str` con `.replace()` y luego `.astype()`.',
        'codigo': 'df[\'col\'] = df[\'col\'].str.replace(\',\', \'\', regex=False).astype(float)'
    },
    {
        'pregunta': '¿Cómo se cambian los nombres de todas las columnas de un DataFrame en una sola línea?',
        'respuesta': 'Se usa el atributo `.columns` y se asigna una nueva lista de nombres.',
        'codigo': 'df.columns = [\'col1\', \'col2\', \'col3\']'
    },
    {
        'pregunta': '¿Cómo se hace una fusión (join) de tipo `left`?',
        'respuesta': 'Se usa `pd.merge()` y se especifica `how=\'left\'`.',
        'codigo': 'pd.merge(df1, df2, on=\'key\', how=\'left\')'
    },
    {
        'pregunta': '¿Cómo se hace una fusión (join) de tipo `inner`?',
        'respuesta': 'Se usa `pd.merge()` y se especifica `how=\'inner\'`. Este es el comportamiento por defecto.',
        'codigo': 'pd.merge(df1, df2, on=\'key\', how=\'inner\')'
    },
    {
        'pregunta': '¿Cómo se hace una fusión (join) de tipo `outer`?',
        'respuesta': 'Se usa `pd.merge()` y se especifica `how=\'outer\'`.',
        'codigo': 'pd.merge(df1, df2, on=\'key\', how=\'outer\')'
    },
    {
        'pregunta': '¿Cómo se usa `pd.concat` para unir DataFrames por columnas?',
        'respuesta': 'Se usa `pd.concat()` con `axis=1`.',
        'codigo': 'df_unido = pd.concat([df1, df2], axis=1)'
    },
    {
        'pregunta': '¿Cómo se muestra la forma (shape) de un DataFrame?',
        'respuesta': 'Se usa el atributo `.shape`.',
        'codigo': 'df.shape'
    },
    {
        'pregunta': '¿Qué es el `iloc` para seleccionar un valor específico?',
        'respuesta': 'Se usa la notación de `[fila, columna]` por sus índices enteros.',
        'codigo': 'valor = df.iloc[0, 1]'
    },
    {
        'pregunta': '¿Qué es el `loc` para seleccionar un valor específico?',
        'respuesta': 'Se usa la notación de `[fila, columna]` por sus etiquetas.',
        'codigo': 'valor = df.loc[\'fila_0\', \'col_1\']'
    },
    {
        'pregunta': '¿Cómo se usa `.apply()` para transformar una columna?',
        'respuesta': 'Se aplica una función a cada elemento de la columna.',
        'codigo': 'df[\'col\'] = df[\'col\'].apply(lambda x: x.upper())'
    },
    {
        'pregunta': '¿Cómo se usa `.map()` para transformar una columna usando un diccionario?',
        'respuesta': 'Se usa un diccionario para mapear valores viejos a nuevos valores.',
        'codigo': 'mapeo = {\'A\': 1, \'B\': 2}\ndf[\'col\'] = df[\'col\'].map(mapeo)'
    },
    {
        'pregunta': '¿Cómo se calcula la desviación estándar de una columna?',
        'respuesta': 'Se usa el método `.std()`.',
        'codigo': 'df[\'col\'].std()'
    },
    {
        'pregunta': '¿Cómo se usa `pivot` para reorganizar un DataFrame de largo a ancho?',
        'respuesta': 'Se usa `df.pivot()` con los argumentos `index`, `columns` y `values`.',
        'codigo': 'df.pivot(index=\'fecha\', columns=\'producto\', values=\'ventas\')'
    },
    {
        'pregunta': '¿Cómo se usa `melt` para reorganizar un DataFrame de ancho a largo?',
        'respuesta': 'Se usa `pd.melt()` con los argumentos `id_vars` y `value_vars`.',
        'codigo': 'pd.melt(df, id_vars=[\'id\'], value_vars=[\'var1\', \'var2\'])'
    },
    {
        'pregunta': '¿Cómo se convierte un DataFrame en un diccionario de Python?',
        'respuesta': 'Se usa el método `.to_dict()`.',
        'codigo': 'df.to_dict()'
    },
    {
        'pregunta': '¿Cómo se convierte un DataFrame en una lista de Python?',
        'respuesta': 'Se usa el método `.values.tolist()`',
        'codigo': 'df.values.tolist()'
    },
    {
        'pregunta': '¿Cómo se usa `pd.isin()` para filtrar por múltiples valores?',
        'respuesta': 'Se usa `pd.isin()` para comprobar si cada elemento del DataFrame está contenido en otra `Series` o lista.',
        'codigo': 'df[df[\'col\'].isin([\'valor1\', \'valor2\'])]'
    },
    {
        'pregunta': '¿Cómo se obtiene el número de valores únicos en una columna?',
        'respuesta': 'Se usa el método `.nunique()`.',
        'codigo': 'df[\'col\'].nunique()'
    },
    {
        'pregunta': '¿Cómo se seleccionan filas basadas en el valor de su índice?',
        'respuesta': 'Se usa `.loc[]` y el nombre del índice.',
        'codigo': 'df.loc[\'indice_fila_1\']'
    },
    {
        'pregunta': '¿Cómo se crea un DataFrame a partir de una lista de listas?',
        'respuesta': 'Se pasa la lista de listas al constructor del DataFrame y se especifican los nombres de las columnas.',
        'codigo': 'lista = [[1, 2], [3, 4]]\ndf = pd.DataFrame(lista, columns=[\'col1\', \'col2\'])'
    },
    {
        'pregunta': '¿Cómo se obtiene el tamaño de un DataFrame?',
        'respuesta': 'Se usa el atributo `.size`, que es el número de filas por el número de columnas.',
        'codigo': 'df.size'
    },
    {
        'pregunta': '¿Cómo se crea una `Series` a partir de un diccionario?',
        'respuesta': 'Se usa el constructor de `Series` y se pasa el diccionario.',
        'codigo': 'diccionario = {\'a\': 10, \'b\': 20}\ns = pd.Series(diccionario)'
    },
    {
        'pregunta': '¿Cómo se obtiene el índice de un DataFrame?',
        'respuesta': 'Se usa el atributo `.index`.',
        'codigo': 'df.index'
    },
    {
        'pregunta': '¿Cómo se itera sobre las filas de un DataFrame?',
        'respuesta': 'Se usa el método `.iterrows()`.',
        'codigo': 'for index, row in df.iterrows():\n    print(row[\'col\'])'
    },
    {
        'pregunta': '¿Cómo se crea una copia de un DataFrame?',
        'respuesta': 'Se usa el método `.copy()`.',
        'codigo': 'df_copia = df.copy()'
    },
    {
        'pregunta': '¿Cómo se usa `clip` para recortar valores fuera de un rango?',
        'respuesta': 'Se usa `df.clip()` con `lower` y `upper` para establecer los límites.',
        'codigo': 'df[\'col\'].clip(lower=0, upper=100)'
    },
    {
        'pregunta': '¿Cómo se usa `between` para filtrar valores dentro de un rango?',
        'respuesta': 'Se usa `df.between()` con el límite inferior y superior.',
        'codigo': 'df[df[\'col\'].between(10, 20)]'
    },
    {
        'pregunta': '¿Cómo se obtiene el número de filas y columnas del DataFrame?',
        'respuesta': 'Se usa el atributo `.shape`. El primer valor es el número de filas, el segundo el de columnas.',
        'codigo': 'num_filas, num_cols = df.shape'
    },
    {
        'pregunta': '¿Cómo se usa `pipe` para encadenar operaciones?',
        'respuesta': 'Se usa `df.pipe()` para aplicar una función que acepta el DataFrame como primer argumento.',
        'codigo': 'df.pipe(mi_funcion_de_limpieza)'
    },
    {
        'pregunta': '¿Cómo se convierte un DataFrame en una lista de tuplas?',
        'respuesta': 'Se usa el método `.itertuples()`.',
        'codigo': 'for row in df.itertuples():\n    print(row.columna)'
    },
    {
        'pregunta': '¿Cómo se cuenta el número de filas de un DataFrame?',
        'respuesta': 'Se usa `len(df)` o `df.shape[0]`.',
        'codigo': 'num_filas = len(df)'
    },
    {
        'pregunta': '¿Cómo se cuenta el número de columnas de un DataFrame?',
        'respuesta': 'Se usa `df.shape[1]`.',
        'codigo': 'num_cols = df.shape[1]'
    },
    {
        'pregunta': '¿Cómo se convierte un DataFrame en un array de NumPy?',
        'respuesta': 'Se usa el atributo `.values`.',
        'codigo': 'array = df.values'
    },
    {
        'pregunta': '¿Cómo se usa `nlargest` para obtener las n filas con los valores más grandes?',
        'respuesta': 'Se usa `df.nlargest()` y se especifica la columna.',
        'codigo': 'df.nlargest(5, \'columna\')'
    },
    {
        'pregunta': '¿Cómo se usa `nsmallest` para obtener las n filas con los valores más pequeños?',
        'respuesta': 'Se usa `df.nsmallest()` y se especifica la columna.',
        'codigo': 'df.nsmallest(5, \'columna\')'
    },
    {
        'pregunta': '¿Cómo se obtiene un valor aleatorio de una columna?',
        'respuesta': 'Se usa `.sample(1)` en la columna.',
        'codigo': 'df[\'col\'].sample(1)'
    },
    {
        'pregunta': '¿Cómo se reemplazan valores en varias columnas a la vez?',
        'respuesta': 'Se pasa un diccionario al método `df.replace()`.',
        'codigo': 'df.replace({\'col1\': {1:\'a\'}, \'col2\':{2:\'b\'}})'
    },
    {
        'pregunta': '¿Cómo se cambia el nombre de los índices?',
        'respuesta': 'Se usa el método `.rename()` con el argumento `index`.',
        'codigo': 'df.rename(index={0:\'fila_0\'})'
    },
    {
        'pregunta': '¿Cómo se realiza una búsqueda de texto que contenga una subcadena?',
        'respuesta': 'Se usa el método `.str.contains()`.',
        'codigo': 'df[df[\'texto\'].str.contains(\'palabra\')]'
    },
    {
        'pregunta': '¿Cómo se usa `.groupby()` para contar elementos?',
        'respuesta': 'Se agrupa y luego se usa `.size()`.',
        'codigo': 'df.groupby(\'col\').size()'
    },
    {
        'pregunta': '¿Cómo se eliminan filas con `isin()`?',
        'respuesta': 'Se usa el operador `~` para negar la condición `isin()`.',
        'codigo': 'df[~df[\'col\'].isin([\'valor1\', \'valor2\'])]'
    },
    {
        'pregunta': '¿Cómo se une una columna de una lista a un DataFrame?',
        'respuesta': 'Se asigna la lista a una nueva columna.',
        'codigo': 'lista = [1, 2, 3]\ndf[\'nueva_columna\'] = lista'
    },
    {
        'pregunta': '¿Cómo se usan los métodos encadenados de pandas?',
        'respuesta': 'Se encadenan múltiples operaciones en una sola línea. La legibilidad se mejora con saltos de línea y paréntesis.',
        'codigo': '(df\n .dropna()\n .rename(columns={\'A\':\'a\'}))'
    },
    {
        'pregunta': '¿Cómo se seleccionan todas las columnas que son de tipo numérico?',
        'respuesta': 'Se usa el método `select_dtypes(include=np.number)`.',
        'codigo': 'df.select_dtypes(include=np.number)'
    },
    {
        'pregunta': '¿Cómo se seleccionan todas las columnas que son de tipo "object"?',
        'respuesta': 'Se usa el método `select_dtypes(include=\'object\')`.',
        'codigo': 'df.select_dtypes(include=\'object\')'
    },
    {
        'pregunta': '¿Cómo se usa el operador `and` en filtros de pandas?',
        'respuesta': 'Se usa el operador `&`.',
        'codigo': 'df[(df[\'col1\'] > 1) & (df[\'col2\'] == 2)]'
    },
    {
        'pregunta': '¿Cómo se usa el operador `or` en filtros de pandas?',
        'respuesta': 'Se usa el operador `|`.',
        'codigo': 'df[(df[\'col1\'] > 1) | (df[\'col2\'] == 2)]'
    },
    {
        'pregunta': '¿Cómo se usa el operador `not` en filtros de pandas?',
        'respuesta': 'Se usa el operador `~`.',
        'codigo': 'df[~(df[\'col\'] > 5)]'
    },
    {
        'pregunta': '¿Cómo se usa `mask` para reemplazar valores condicionalmente?',
        'respuesta': 'Se usa `df.mask()` con una condición booleana.',
        'codigo': 'df.mask(df[\'col\'] > 10, \'alto\')'
    },
    {
        'pregunta': '¿Cómo se usa `where` para reemplazar valores condicionalmente?',
        'respuesta': 'Se usa `df.where()` para reemplazar los valores que NO cumplan la condición.',
        'codigo': 'df.where(df[\'col\'] > 10, \'bajo\')'
    },
    {
        'pregunta': '¿Cómo se obtiene el número de elementos únicos de una columna?',
        'respuesta': 'Se usa `.nunique()` o `len(df.columna.unique())`.',
        'codigo': 'df[\'col\'].nunique()'
    },
    {
        'pregunta': '¿Cómo se crea un DataFrame con un índice de tiempo (Time series)?',
        'respuesta': 'Se crea un índice de tiempo usando `pd.to_datetime()` y se asigna al DataFrame.',
        'codigo': 'df.index = pd.to_datetime(df[\'fecha\'])'
    },
    {
        'pregunta': '¿Cómo se elimina el índice de un DataFrame?',
        'respuesta': 'Se usa `df.reset_index(drop=True, inplace=True)`.',
        'codigo': 'df.reset_index(drop=True, inplace=True)'
    },
    {
        'pregunta': '¿Cómo se extrae el mes de una columna de tipo datetime?',
        'respuesta': 'Se usa el atributo `.dt.month`.',
        'codigo': 'df[\'fecha\'].dt.month'
    },
    {
        'pregunta': '¿Cómo se extrae la hora de una columna de tipo datetime?',
        'respuesta': 'Se usa el atributo `.dt.hour`.',
        'codigo': 'df[\'fecha\'].dt.hour'
    },
    {
        'pregunta': '¿Cómo se convierten los valores de una columna a mayúsculas?',
        'respuesta': 'Se usa el accesor `.str` con el método `.upper()`.',
        'codigo': 'df[\'col\'].str.upper()'
    },
    {
        'pregunta': '¿Cómo se convierten los valores de una columna a minúsculas?',
        'respuesta': 'Se usa el accesor `.str` con el método `.lower()`.',
        'codigo': 'df[\'col\'].str.lower()'
    },
    {
        'pregunta': '¿Cómo se reemplazan valores nulos con interpolación?',
        'respuesta': 'Se usa el método `.interpolate()`.',
        'codigo': 'df.interpolate(method=\'linear\')'
    },
    {
        'pregunta': '¿Cómo se cambian los tipos de datos de varias columnas a la vez?',
        'respuesta': 'Se usa el método `.astype()` y se le pasa un diccionario.',
        'codigo': 'df = df.astype({\'col1\': \'int\', \'col2\': \'float\'})'
    },
    {
        'pregunta': '¿Cómo se usa `pd.get_dummies()` para una columna específica?',
        'respuesta': 'Se usa la función `pd.get_dummies()` y se le pasa la columna.',
        'codigo': 'dummies = pd.get_dummies(df[\'categoria\'])'
    },
    {
        'pregunta': '¿Cómo se usa `merge` para fusionar DataFrames por dos claves?',
        'respuesta': 'Se le pasa una lista de nombres de columna al argumento `on`.',
        'codigo': 'pd.merge(df1, df2, on=[\'key1\', \'key2\'])'
    },
    {
        'pregunta': '¿Cómo se cuenta el número de valores no nulos por columna?',
        'respuesta': 'Se usa el método `.count()`.',
        'codigo': 'df.count()'
    },
    {
        'pregunta': '¿Cómo se usa `.dropna()` con un umbral de valores no nulos?',
        'respuesta': 'Se usa el argumento `thresh`.',
        'codigo': 'df.dropna(thresh=2)'
    },
    {
        'pregunta': '¿Cómo se seleccionan columnas que terminan con un sufijo?',
        'respuesta': 'Se usa una lista de comprensión con `.str.endswith()`.',
        'codigo': '[col for col in df.columns if col.endswith(\'_cm\')]'
    },
    {
        'pregunta': '¿Cómo se usa `pivot_table` con múltiples funciones de agregación?',
        'respuesta': 'Se pasa una lista de funciones al argumento `aggfunc`.',
        'codigo': 'df.pivot_table(index=\'categoria\', values=\'ventas\', aggfunc=[\'mean\', \'sum\'])'
    },
    {
        'pregunta': '¿Cómo se obtiene el número de filas de un DataFrame?',
        'respuesta': 'Se usa la función `len()` con el DataFrame.',
        'codigo': 'len(df)'
    },
    {
        'pregunta': '¿Cómo se lee un archivo CSV sin la primera columna (el índice)?',
        'respuesta': 'Se usa el argumento `index_col=False`.',
        'codigo': 'pd.read_csv(\'datos.csv\', index_col=False)'
    },
    {
        'pregunta': '¿Cómo se escribe un DataFrame en un archivo CSV sin el índice?',
        'respuesta': 'Se usa el argumento `index=False`.',
        'codigo': 'df.to_csv(\'salida.csv\', index=False)'
    }
]

# Añadir cada tarjeta al mazo
for tarjeta_data in tarjetas:
    nota = genanki.Note(
        model=modelo_pandas,
        fields=[tarjeta_data['pregunta'], tarjeta_data['respuesta'], tarjeta_data['codigo']]
    )
    mazo_pandas.add_note(nota)

# Genera el archivo .apkg
genanki.Package(mazo_pandas).write_to_file('pandas_100_tarjetas.apkg')

print("¡Archivo 'pandas_100_tarjetas.apkg' generado con éxito!")